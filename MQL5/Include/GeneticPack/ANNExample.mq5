//+------------------------------------------------------------------+
//| На входе:                                                        |
//| фактические изменения цен пяти предыдущих баров                  |
//| (приведены в диапазон 0-1)                                       |
//+------------------------------------------------------------------+
#include            "ANNTrainLib.mqh"
#include            "MustHaveLib.mqh"

input double        trainDD=0.5;  // Максимально возможная просадка баланса в тренировке
input double        maxDD=0.2;    // Просадка баланса, после которой сеть перетренируется
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int OnInit()
  {
   tf=Period();
//--- для побарного тестирования...
   prevBT[0]=D'2001.01.01';
//---... очень давно
   TimeToStruct(prevBT[0],prevT);
//--- задаем кол-во слоев нейросети
   layers=2;
//--- задаем кол-во нейронов в каждом слое
   neurons=5;
//--- глубина истории (задаем, так как оптимизируем на исторических данных)
   depth=1000;
//--- сколько за раз копируем (задаем, так как оптимизируем на исторических данных)
   count=6;
//--- обязательно инициализируем массивы, необходимые нейросети, и массивы,
//--- необходимые для ее обучения, если обучение производится на исторических данных
   InitArrays();
//--- вызываем функцию генетической оптимизации нейросети
   GA();
//--- получаем оптимизированные параметры нейросети и других переменных
   GetTrainANNResults();
//--- получаем просадку по балансу 
   InitRelDD();
   return(0);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
  }
//+------------------------------------------------------------------+
//| Trade function                                                   |
//+------------------------------------------------------------------+
void OnTrade()
  {
  }
//+------------------------------------------------------------------+
//| InitFirstLayer                                                   |
//| Обязательно вызывать перед каждым обращением к нейросети         |
//+------------------------------------------------------------------+
void InitFirstLayer()
  {
   CopyTime(s,tf,from,count,d);
   TimeToStruct(d[1],dt);
   CopyOpen(s,tf,from,count,o);
   CopyClose(s,tf,from,count,c);
//--- 1-й нейрон, изменение цены 5-го бара
   ne[0]=(c[0]-o[0])/c[0]+0.5;
//--- 2-й нейрон, изменение цены 4-го бара
   ne[1]=(c[1]-o[1])/c[1]+0.5;
//--- 3-й нейрон, изменение цены 3-го бара   
   ne[2]=(c[2]-o[2])/c[2]+0.5;
//--- 4-й нейрон, изменение цены 2-го бара
   ne[3]=(c[3]-o[3])/c[3]+0.5;
//--- 5-й нейрон, изменение цены 1-го бара
   ne[4]=(c[4]-o[4])/c[4]+0.5;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTick()
  {
   if(isNewBars()==true)
     {
      if(PositionsTotal()>0)
        {
         ClosePosition();
         //--- если просадка баланса превысила допустимую:
         if(GetRelDD()>maxDD)
           {
            //--- вызываем функцию генетической оптимизации нейросети
            GA();
            //--- получаем оптимизированные параметры нейросети и других переменных
            GetTrainANNResults();
            //--- отсчет просадки будем теперь вести не от максимума баланса, а от текущего баланса
            maxBalance=AccountInfoDouble(ACCOUNT_BALANCE);
           }
        }
      //--- для нейросети, использующей исторические данные - откуда начинаем их копировать
      from=0;
      //--- инициализируем входной слой
      InitFirstLayer();
      //--- получаем результат на выходе нейросети
      ANNRes=GetANNResult();
      if(ANNRes<0.75) request.type=ORDER_TYPE_SELL;
      else request.type=ORDER_TYPE_BUY;
      OpenPosition();
     };
  }
//+------------------------------------------------------------------+
